spring.application.name=order-service

server.port= 8085

inventory.Service.Base.Uri=http://localhost:8080/api/inventory/
product.Service.Base.Uri=http://localhost:8084/api/product/

#KafkaProducerSetup
order.events.topic.name=Order-Events-Topic
spring.kafka.producer.bootstrap-servers = localhost:9092
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer

#kafka Consumer Setup
batch.order.events.topic.name=Batch-Order-Events-Topic
batch.order.events.groupId=batchOrderGroup
spring.kafka.consumer.bootstrap-servers = localhost:9092
spring.kafka.consumer.auto-offset-reset = earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer = org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

#hibernate properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

#Eureka Discovery Client Setup
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
